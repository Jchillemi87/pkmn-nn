priorityKOchance:
1HKO: (either with or without 100% accuracy move)
1HKO+Priority: ??? (might not be needed)

State Predictor Function:
(currentState,Attacker,Defender,Move)

MISS STATE: (acc, evasion, confusion, paralysis, infactuation, etc)
CRIT STATE
CRIT & 2ND EFFECT STATE
DAMAGE ONLY STATE
2ND EFFECT & DAMAGE STATE

return score - adjusted for chance of state occuring.

~~~~~~~~~~~~~~~~~~~~~~

TODO:
handle megas better
(change stats names, in some sort of clear way?!)

start a battle in bash using: ./pokemon-showdown simulate-battle
then enter commands normally example:

>start {"formatid":"gen7randombattle"}
>player p1 {"name":"Alice"}
>player p2 {"name":"Bob"}

then enter:
>p1 move 1
press enter

then enter:
>p2 move 2
press enter

clear volatiles when switched out

Z-MOVES


~~~~~~~~~~~~~~~~~~~~~~All SIM-PROTOCOL.md list~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|detailschange|POKEMON|DETAILS|HP STATUS or |-formechange|POKEMON|SPECIES|HP STATUS //for megas

|-fail|POKEMON|ACTION	//unboost will appear when stat change was prevented

|-heal|POKEMON|HP STATUS
|-status|POKEMON|STATUS //inflicted with a status
|-curestatus|POKEMON|STATUS
|-cureteam|POKEMON

|-endability|POKEMON 

|-transform|POKEMON|SPECIES
|-activate|EFFECT



|-hint|MESSAGE
|-crit|POKEMON
|-supereffective|POKEMON
|-resisted|POKEMON
|-immune|POKEMON






|cant|POKEMON|REASON or |cant|POKEMON|REASON|MOVE 	//why a move failed
|[miss]	//move missed

|replace|POKEMON|DETAILS|HP STATUS //for illusions


|clearpoke - for team preview

|swap|POKEMON|POSITION
|-center
|-message|MESSAGE


app.curRoom.battle.activityQueue (look at log)

~~~~~~~~~~~~~~~~~~~~~~Commands for console~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Commands for console (for team builder)

app.curRoom.curSetList
app.curRoom.curTeam

localStorage

Storage
Storage.teams	use this to see teams

Storage.unpackTeam(localStorage.showdown_teams)	pack and unpack teams

To make any changes, just change the Storage.teams object(s) and save by using: 	Storage.saveTeams();


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~PLAN~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

play thousands of games

simplify replay data
	**advanced**
	**find tactics by comparing all winning games**
	**train a NN for each tactic**
	**make a tacti**

train NN

------------------------------------------


~~~~
$("ul.linklist > li > a").each((n,x)=>{console.log(x.href);});
For getting back a list of replace from:
https://replay.pokemonshowdown.com/search/?format=gen7randombattle&rating

**Note: Just add .log to get the log**
~~~~db.Starmie.find({$and: [{'set.moves':"hydropump"},{'set.moves':"icebeam"},{'set.item': "Leftovers"}]},{"_id":false,'set.moves':true,total:true})
db.Mew.aggregate([{$group:{_id: null, TOTAL: { $sum: "$total" }}}])
db.Mew.updateMany({}, {$rename:{'total':'iterations'}})





~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Predict Opponent's moves and the likely hood of it occuring

SWITCH PREDICTION & Probability

Substitute:
Pokemon.volatiles.substitute = Array(1) ~~~ 0:"substitute"

Stealth Rock:
battle.Side.sideConditions = Array(4)
0: "Stealth Rock"
1: 1
2: 0
3: 0

Stealth Rock + Sticky Web:
room.battle.mySide.sideConditions
{stealthrock: Array(4), stickyweb: Array(4)}
stealthrock: Array(4)
0: "Stealth Rock"
1: 1
2: 0
3: 0
length: 4
__proto__: Array(0)
stickyweb: Array(4)
0: "Sticky Web"
1: 1
2: 0
3: 0

Toxic Spikes x2 + Stealth Rock
room.battle.mySide.sideConditions
{toxicspikes: Array(4), stealthrock: Array(4)}
stealthrock: (4) ["Stealth Rock", 1, 0, 0]
toxicspikes: (4) ["Toxic Spikes", 2, 0, 0]

Knockoff makes this sort of change:
Pokemon.prevItem = ""
Pokemon.prevItem = "Lum Berry"

room.battle.pseudoWeather: Array(1)
0: Array(3)
0: "Electric Terrain"
1: 4
2: 7

List of Volatiles:

lockedmove: Outrage, Thrash, Petal Dance

Bound: lose 1/8th Max HP (Binding Band = lose 1/6th), 4-5 turns (Grip Claw = 7 turns), Can't Switch?

trapped / trapper: (Unless Shed Shell, Uses U-turn, Volt Switch, or Baton Pass), Ghost can't be trapped

Confusion: 33% chance to attack self with a 40BP typeless Physical Attack, last 1-4 attacking turns (Own Tempo prevents)

Curse: If a ghost-type used curse, 1/4 of max HP is lost every turn

Embargo: Can't use held Item for 5 turns, and can't use Fling

Encore: Forced to use the same last move for 3 turns

flinch: Inner Focus prevents, steadfast still flinch but gain speed

Heal Block: Can't heal for 5 turns, or use ANY healing moves (including DMG then heal moves) except leech seed. Heal Block BREAKs Volt Absorb and Water Absorb. Healing by items is also prevented

Infatuation: Can't attack 50% of the time (even against pokemon that didn't originally cause the condition)

Leech Seed: lose 1/8 of health, healing opponent by the same amount lost

Nightmare: lose 1/4 of health while asleep

Perish Song: faint after 3 turns (sound proof = immune)

Taunt: can't use status moves for 3 turns (including nature's power). Mental Herb cures, oblivious prevents and cures, aroma veil makes you immune to taunt

Telekinesis: A Pokémon telekinetically levitated by Telekinesis is immune to Ground-type moves, Spikes, Toxic Spikes, and Arena Trap for three turns. In addition, all other moves, except one-hit knockout moves, hit the target regardless of accuracy and evasion; however, it does not allow moves to hit semi-invulnerable Pokémon.

The effect of Telekinesis is canceled when Gravity is used, the levitated Pokémon uses Ingrain, or the levitated Pokémon obtains an Iron Ball; Telekinesis cannot lift targets if Gravity is in effect, and will fail if used on a target that is rooted or holding an Iron Ball.

Torment: Can't use the same move twice (choice items = struggle)

Aqua Ring: 1/16th heal

Bracing: Will survive with 1hp

twoturnmove (Charging Up): Cannot act (Power Herb, Solar Beam and Solar Blade, the presence of harsh sunlight). Pokémon that are readying Sky Attack become cloaked in light. Pokémon that are readying Solar Beam or Solar Blade take in sunlight. Pokémon that are readying Razor Wind whip up a whirlwind.

futuremove: (side condition)

choicelock: Choice Items

Center of Attention: (does nothing in singles)

Defense Curl: Double the power of Rollout and Ice Ball

Rooting: if rooted by ingrain, heal by 1/16th of max HP, but can't switch or forced out

Magic Coat: Reflect most status conditions

Magnetic Levitation: Immune to ground-type attacks

Minimize: 

stall (Protection): (Protect, Detect, Spiky Shield, or Baneful Bunker). Z-moves will break through but only deal 1/4th.  Feint, Shadow Force, Hyperspace Fury, Hyperspace Hole, or Phantom Force break through

mustrecharge,recharge,truant: Cannot perform an action

Semi-invulnerable: some moves go through and interaction with no guard is different

Substitute: 1/4th of max HP (fails if not enough remaining) as a damage buffer. Substitute prevents all status cond.

Taking Aim: Will hit without fail

Withdrawing: Boost Defense, can be skipped with Power Herb



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Considertions For Switch Calculation:

High Priority
Do we go 1st?

Our best damaging move vs opponent (maybe our best stab damaging move, since we might have a move the opponent doesn't suspect)
Their best damaging move

Our Status Moves
Thier Status Moves

Our Major Status
Their Major Status

Their Volitile Status
Our Volitile Status

Field
	Terrain
	Weather
	Other Effects (gravity, trick room, etc)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
disable - Disable (includes move also)
charge - move: Charge -activate (eletric type move are doubled next turn for the user)  //not used?
defensecurl //not used?
mimic - Mimic (followed by mimic'd move) (uses -start like normal)  //not used?

    case "move: Ingrain": //not usesd?
      return (Math.pow(2, 3)).toString(2);

    case "move: Laser Focus": //not used?
      return (Math.pow(2, 4)).toString(2);

          case "move: Heal Block": //not used?
      return (Math.pow(2, 7)).toString(2);

    case "move: Imprison":  //not used
      return (Math.pow(2, 8)).toString(2);

    case "Miracle Eye": //not used
      return (Math.pow(2, 10)).toString(2);

    case "Foresight": //not used
      return (Math.pow(2, 11)).toString(2);

    case "Nightmare": //not used?
      return (Math.pow(2, 12)).toString(2);

    case "Power Trick": //not used?
      return (Math.pow(2, 13)).toString(2);

    case "stockpile": //not used?
      return (Math.pow(2, 14)).toString(2);

    case "Telekinesis": //not used?
      return (Math.pow(2, 15)).toString(2);

          case "Torment": //not used?
      return (Math.pow(2, 17)).toString(2);

          case "move: Bide": //not used
      return (Math.pow(2, 24)).toString(2);

    case "Uproar": //not used
      return (Math.pow(2, 25)).toString(2);

    case "Aqua Ring": //not used
      return (Math.pow(2, 26)).toString(2);

          case "Curse": //not used?
      return (Math.pow(2, 28)).toString(2);

    case "Embargo": //not used?
      return (Math.pow(2, 29)).toString(2);

grudge - move: Grudge (-activate) ????
destinybond - Destiny Bond ????
electrify ????
gastroacid ????****
minimize ????
helpinghand ????
flinch  ????
stall ???? protect spikyshield, kingsshield, endure, banefulbunker, quickguard, wideguard
spotlight ????
snatch ????
ragepowder ????
roost ????
magiccoat ????
rage ????
powder ????
followme ????
